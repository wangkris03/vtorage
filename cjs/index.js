var s=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var n=(a,e,t)=>e in a?s(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,f=(a,e)=>{for(var t in e||(e={}))c.call(e,t)&&n(a,t,e[t]);if(l)for(var t of l(e))m.call(e,t)&&n(a,t,e[t]);return a};var S=(a,e)=>{for(var t in e)s(a,t,{get:e[t],enumerable:!0})},T=(a,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of g(e))!c.call(a,o)&&o!==t&&s(a,o,{get:()=>e[o],enumerable:!(r=d(e,o))||r.enumerable});return a};var v=a=>T(s({},"__esModule",{value:!0}),a);var b={};S(b,{Vtorage:()=>y});module.exports=v(b);var y=(a,e,t="localStorage")=>{if(typeof e!="object")throw"db: init need a object";let r={val:JSON.parse(JSON.stringify(e)),defaultValues:JSON.parse(JSON.stringify(e)),set:o=>{r.val=o,t!=="memory"&&window[t].setItem(a,JSON.stringify(r.val))},assign:o=>{Object.assign(r.val,o),t!=="memory"&&window[t].setItem(a,JSON.stringify(r.val))},clear:()=>{r.set(f({},r.defaultValues))}};if(t!=="memory"){let o=window[t].getItem(a);if(o)try{let i=JSON.parse(o);r.assign(i)}catch(i){console.error(i)}}return r};
